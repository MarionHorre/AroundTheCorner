require 'geokit'
require 'json'

# file = File.read('./data-mel/district/limite-des-quartiers-de-lille-et-de-ses-communes-associees.geojson')
# district_json = JSON.parse(file)
# p district_json["features"]
# district_geo_json = RGeo::GeoJSON.decode(file, json_parser: :json)
# p district_geo_json

# bois_blanc_polygone = [[[3.028782738368216, 50.63540254500171], [3.028782738368216, 50.63540254500171], [3.029252628975126, 50.63563154765019], [3.029258176256924, 50.635634310410005], [3.029356106341107, 50.635680657207224], [3.0299488710156, 50.635961346555874], [3.030463990611842, 50.63620006158723], [3.030697284234698, 50.63630198733504], [3.030929473747903, 50.63639681428607], [3.031393829817895, 50.63661325493006], [3.031683735310652, 50.63674882676827], [3.031985484431978, 50.63693268516456], [3.032291251577202, 50.637129195388496], [3.032472394048917, 50.637270438306835], [3.032824698298022, 50.637585690770656], [3.03298887372991, 50.637736378200046], [3.033113216541602, 50.63785016506718], [3.033214724734671, 50.63793910830647], [3.033297348594275, 50.63800208514785], [3.033348159301878, 50.63803576967681], [3.033414862547156, 50.63807331779242], [3.0334936050221, 50.63811348309265], [3.033550365194221, 50.63813822761515], [3.033631119909911, 50.638169489864644], [3.033711875503355, 50.63820190973297], [3.033791584031138, 50.63823003118615], [3.03386529246248, 50.63825423249443], [3.033969701632644, 50.638289302103246], [3.034057497553653, 50.63831890191363], [3.034293811846258, 50.63837611923705], [3.034366711067565, 50.63839259367406], [3.03456318921488, 50.638430903871374], [3.034856697030157, 50.63848347349085], [3.035100936729259, 50.63853040260075], [3.035347954582772, 50.638573983057995], [3.03582806651544, 50.63866599257841], [3.036053220823446, 50.63872174694966], [3.036169144279437, 50.63875180373696], [3.036325936997386, 50.63880239041258], [3.036499677654478, 50.63887111773966], [3.036648903047796, 50.63893559828428], [3.036954158093347, 50.63906602856107], [3.037358525313493, 50.63923589679714], [3.037472043112965, 50.63927339267751], [3.037574843286871, 50.63930198032024], [3.037702131220259, 50.639315815842046], [3.037804439702433, 50.63930959254139], [3.037922327619845, 50.63928420449285], [3.038020647570511, 50.63924770329626], [3.03811875873121, 50.639196610040784], [3.038192175315534, 50.63914791143828], [3.038248025683007, 50.639103795041756], [3.038329739824031, 50.639018003432625], [3.039024348571549, 50.63823485059548], [3.040013193697221, 50.637295043209534], [3.039718170576794, 50.637037487979676], [3.038713406393226, 50.636164487025496], [3.038607954824224, 50.63607530696844], [3.038481732656586, 50.63613442355744], [3.038385227087715, 50.63617315931297], [3.03825904161337, 50.63611440803404], [3.038795469694225, 50.63586203854477], [3.039449163195435, 50.63542150233643], [3.039786834575679, 50.63521744583304], [3.04009904916414, 50.634963015121045], [3.039790063509797, 50.63471564946836], [3.039528955984494, 50.63448258166642], [3.038884786442777, 50.63388471328526], [3.038287218399965, 50.63333370828604], [3.037582560854999, 50.63270026775381], [3.037078898893013, 50.632172282471814], [3.036669469678465, 50.63181211318521], [3.036345801814159, 50.631523289876306], [3.035943081743603, 50.63113838270939], [3.035070478102728, 50.63035998540538], [3.034558757617525, 50.63000265499376], [3.034151082463279, 50.629637988609595], [3.03357199264597, 50.62913736121765], [3.032706190019154, 50.628336462457405], [3.031715056159573, 50.627287071043895], [3.031355039607064, 50.626920990818284], [3.030917767717556, 50.626459934974285], [3.03007729861475, 50.62557355442211], [3.029372925630868, 50.62482219045201], [3.029200765892586, 50.62450888132708], [3.029073708823462, 50.624142549512946], [3.029133781589552, 50.62365838458091], [3.029208961127794, 50.623487314796115], [3.029364844577397, 50.62316199169472], [3.029473806539543, 50.62300868296011], [3.029143536410523, 50.6228669293487], [3.029008930069932, 50.62270943300586], [3.028793811795935, 50.62259844265797], [3.028411628804165, 50.62252769565919], [3.027940142100149, 50.622625866126356], [3.027866011651314, 50.62237933761042], [3.027787325622856, 50.62218446675044], [3.027655472276733, 50.62209655584016], [3.02743431740081, 50.62205518795747], [3.027086729060391, 50.62205833354808], [3.026757462320557, 50.62210739633625], [3.026427002967006, 50.6221968703195], [3.026116202710588, 50.622303076568606], [3.025771926657517, 50.622413964649425], [3.025240173570893, 50.6224933808437], [3.024933359118688, 50.62250975834285], [3.02457333556147, 50.622506231398106], [3.024185097802275, 50.62250399225123], [3.023738070623364, 50.62246392700501], [3.023296071634683, 50.62240473471856], [3.021232161006517, 50.622078777054284], [3.021131396133558, 50.6220540248439], [3.020974914923897, 50.62248623251441], [3.020868615706445, 50.6228604386384], [3.020707377311378, 50.623297178332436], [3.020496497403628, 50.623680887034475], [3.020189557063802, 50.624037732505684], [3.020124918008334, 50.62422176297371], [3.019884760504044, 50.624653460911006], [3.019662581721696, 50.62481996220874], [3.019168363140426, 50.62504654399836], [3.01910676450435, 50.625077192037715], [3.019012284659123, 50.62512106435035], [3.018953059092138, 50.62515987863372], [3.018612781139864, 50.625419110208476], [3.018683985723763, 50.625457626515235], [3.018744931640307, 50.62549062508665], [3.018791780600642, 50.62551597959247], [3.018865412584318, 50.625555823629895], [3.018965390266359, 50.62560990593305], [3.019064754684266, 50.62572035629124], [3.019087802674626, 50.62578135156694], [3.019117177792849, 50.6258594779354], [3.019129365723367, 50.625892035079374], [3.01915031397492, 50.6260329563947], [3.01922609034218, 50.62625410901754], [3.019266596510382, 50.62632947844145], [3.019337569352575, 50.6264210328558], [3.019554196000349, 50.62664919005636], [3.01967654885962, 50.626765074595276], [3.019766888344795, 50.6268774640957], [3.019806248738095, 50.62694196550963], [3.019820594347283, 50.627006067055405], [3.019864512700384, 50.627143618966365], [3.019937079640544, 50.62740676230065], [3.019986147825518, 50.62750742868102], [3.020031633731517, 50.62757567128113], [3.020073928894691, 50.62763826053406], [3.020199248482746, 50.62775476313961], [3.020319456349606, 50.627859240812285], [3.020445605093126, 50.62796494685944], [3.020551691414668, 50.62807076377711], [3.020617861805875, 50.62817187569418], [3.020652431714389, 50.628247281336584], [3.020678545440494, 50.62834492678318], [3.020712333845851, 50.62847490546932], [3.020786954580668, 50.62874190641242], [3.020860501941179, 50.62900442022076], [3.020884172334422, 50.629128244044], [3.020883579485906, 50.62919548878765], [3.020883446766316, 50.62921562720199], [3.020883171213909, 50.629265515535025], [3.020874216826128, 50.62931159123523], [3.020843548629454, 50.629460902243046], [3.020800966815811, 50.629666098311816], [3.020773874478417, 50.629797235627024], [3.020768891771239, 50.62989461680167], [3.02077339258569, 50.62996255163902], [3.020804760651803, 50.63007095613857], [3.020843913642022, 50.63017042986247], [3.020880101509387, 50.630230533741965], [3.020951676196341, 50.63032397121288], [3.02097155335853, 50.63034983182681], [3.021064287746595, 50.63043101570475], [3.021191519277517, 50.63054246396931], [3.021260523364862, 50.63059393778763], [3.021338528807386, 50.63064355233492], [3.021674643114017, 50.630822298216955], [3.021541653285685, 50.63094172450292], [3.021508748583623, 50.63097319412073], [3.021419497623749, 50.63105749621501], [3.020186558511115, 50.63223303041963], [3.019385608313757, 50.63299930156323], [3.019149246495233, 50.63322458360302], [3.018779962963893, 50.633604610696054], [3.018687316515371, 50.63368973664364], [3.018067482959427, 50.63428317086944], [3.017990152453328, 50.63435184416348], [3.017707605184721, 50.63461091776655], [3.017564298745675, 50.634741181491854], [3.016909784496726, 50.635383263304085], [3.016876733175859, 50.635415637905865], [3.016827265497655, 50.63547479387042], [3.018086765057114, 50.63579092294559], [3.018531405127298, 50.635897857241524], [3.019084669223469, 50.635988709393644], [3.019451203761845, 50.636049883737165], [3.019665843088234, 50.63610464661703], [3.020807450790187, 50.63642798170401], [3.021167826302631, 50.63656164581154], [3.021855203660433, 50.63684802897317], [3.022964734183065, 50.63734690323619], [3.0233147767121, 50.637538150401234], [3.023713621403067, 50.63779167723975], [3.024321716195015, 50.63739649663515], [3.024968293824531, 50.636965309470376], [3.025434779084606, 50.636661643598856], [3.025581911234627, 50.63659139002317], [3.025800514176196, 50.63648800652087], [3.025965030941279, 50.63641863730832], [3.026152634814328, 50.63635201809954], [3.026336189952967, 50.63628865710658], [3.026616769671665, 50.63619075119117], [3.026918581527429, 50.636084996542785], [3.027522518614804, 50.635885788608064], [3.028127582371807, 50.63566597255991], [3.028643239060393, 50.63548138908752], [3.028782738368216, 50.63540254500171]]]
# wazemmes_polygone =
# lille_sud_polygone =
# lille_moulins_polygone =
# faubourg_de_bethune_polygone =
# hellemmes_polygone =
# vauban_esquermes_polygone =
# saint_maurice_pellevoisin_polygone =
# lille_centre_polygone =
# vieux_lille_polygone =
# fives_polygone =

class PolygoneMaker
  attr_reader :hash

  def initialize(path)
    file = File.read(path)
    @district_json = JSON.parse(file)["features"]
    transform_to_hash
  end

  def transform_to_hash
    @hash = {}
    @district_json.each do |district|
      name = district["properties"]["quartier"]
      coordinates = district["geometry"]["coordinates"]
      points = []
      coordinates.each do |set|
        set.each do |coord|
          points << Geokit::LatLng.new(coord[1],coord[0])
        end
      end
      polygone = Geokit::Polygon.new(points)
      @hash[name] = polygone
    end
    @hash
  end

  def which_city(latitude,longitude)
    point = Geokit::LatLng.new(latitude, longitude)
    @hash.each do |key, value|
      return key if value.contains?(point)
    end
  end
end

maker = PolygoneMaker.new('./data-mel/district/limite-des-quartiers-de-lille-et-de-ses-communes-associees.geojson')

bois_blanc_vlille = Geokit::LatLng.new("50.634045", "3.030778")

p maker.which_city("50.611038", "3.042648")

# points = []
# bois_blanc_polygone.each do |set|
#   set.each do |coord|
#     points << Geokit::LatLng.new(coord[1],coord[0])
#   end
#   puts points
# end

# polygone = Geokit::Polygon.new(points)


# la_madeleine = Geokit::LatLng.new("50.651497", "3.072316")
# bois_blanc_vlille = Geokit::LatLng.new("50.634045", "3.030778")
# puts polygone.contains? la_madeleine
# puts polygone.contains? bois_blanc_vlille
